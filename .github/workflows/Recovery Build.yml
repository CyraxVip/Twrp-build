name: Build Recovery

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if using SSH keys, use git@github.com:repo URL format)'
        required: true
        default: 'https://github.com/SHRP/manifest.git'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'v3_11.0'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/Sandeep2062/recovery_device_xiaomi_selene_te.git'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'shrp_1'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/selene'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'selene'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'twrp_selene'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'boot'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false

jobs:
  Build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    # You can use either of the ubuntu-18.04 or ubuntu-20.04 runner
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"
 
    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v4
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libtinfo5 libgflags-dev
        sudo add-apt-repository universe
        sudo apt -y install libncurses5
        
    - name: Install Python
      run: |
        sudo apt install software-properties-common -y
        sudo add-apt-repository ppa:deadsnakes/ppa -y
        sudo apt install python3.8 -y

    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
      
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "Sandeep2062"
        git config --global user.email "dead2018b@gmail.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd

    - name: Clone phhusson/vendor_lptools
      run: |
        git clone https://github.com/phhusson/vendor_lptools.git
      working-directory: workspace

          
    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync --no-clone-bundle --no-tags --optimized-fetch phhusson/vendor_lptools
      working-directory: workspace
      continue-on-error: true

      
    - name: Make it Clean
      run: |
        pwd
        ls -la build
        source build/envsetup.sh
        make clean
      working-directory: workspace
      
    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
        echo "If you're building SkyHawk or other recovery that supports notch devices please modify the offsets in the BoardConfig.mk by doing your own fork of the device tree ;)"
      working-directory: ${{ steps.pwd.outputs.pwd }}

    - name: Chmod a custom mkbootimg
      run: |
        chmod +x ${{ github.event.inputs.DEVICE_PATH }}/mkbootimg
      working-directory: ${{ steps.pwd.outputs.pwd }}
      
    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.pwd }}

    - name: Check Build Tree
      uses: haya14busa/action-cond@v1
      id: buildtree
      with:
        cond: ${{ github.event.inputs.MANIFEST_BRANCH == 'v3_11.0' || github.event.inputs.MANIFEST_BRANCH == 'v3_11.0' }}
        if_true: shrp
        if_false: twrp

    - name: Sync Device Dependencies
      run: |
        bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
        repo sync -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.pwd }}
      continue-on-error: true

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Check Build Branch
      if: ${{ github.event.inputs.MANIFEST_BRANCH == 'v3_11.0' }}
      run: |
        source build/envsetup.sh
        repopick 5405 5540
      working-directory: ${{ steps.pwd.outputs.pwd }}
      
      
    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.pwd }}
      
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
      # SHRP should be supported in there.
        files: |
          workspace/image_info
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.tar
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/SHRP_**
        name: ${{ github.event.inputs.DEVICE_NAME }}_${{ github.event.inputs.MANIFEST_BRANCH }}
        tag_name: ${{ github.run_id }}
        body: |
          ``${{ github.event.inputs.BUILD_TARGET }}.img``
          Manifest: [${{ github.event.inputs.MANIFEST_BRANCH }}](${{ github.event.inputs.MANIFEST_URL }})
          Device: [Galaxy ${{ github.event.inputs.DEVICE_NAME }}_${{ github.event.inputs.DEVICE_TREE_BRANCH }}](${{ github.event.inputs.DEVICE_TREE_URL }})
          Image_Info: Image_Info file, open it with any text editor.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
